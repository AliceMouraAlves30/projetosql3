# Sistema de Gerenciamento de Vendas

Este projeto consiste em um sistema de gerenciamento de vendas que utiliza um banco de dados SQL para armazenar informações sobre clientes, produtos e vendas. O sistema permite a inserção, consulta, atualização e exclusão de dados, além de consultas avançadas para gerar relatórios.

## Estrutura do Banco de Dados

O banco de dados `sistema_vendas` contém as seguintes tabelas:

- **clientes**: Armazena informações sobre os clientes, incluindo `id_cliente`, `nome`, `email` e `telefone`.
- **produtos**: Armazena informações sobre os produtos, incluindo `id_produto`, `nome`, `preco` e `quantidade_estoque`.
- **vendas**: Armazena informações sobre as vendas realizadas, incluindo `id_venda`, `id_cliente`, `id_produto`, `quantidade` e `data_venda`.

### Esquema de Tabelas

#### Tabela `clientes`
```sql
CREATE TABLE clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    telefone VARCHAR(15)
);
CREATE TABLE produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    preco DECIMAL(10, 2) NOT NULL,
    quantidade_estoque INT NOT NULL
);
CREATE TABLE vendas (
    id_venda INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT NOT NULL,
    id_produto INT NOT NULL,
    quantidade INT NOT NULL,
    data_venda VARCHAR(100),
    FOREIGN KEY (id_cliente) REFERENCES clientes(id_cliente),
    FOREIGN KEY (id_produto) REFERENCES produtos(id_produto)
);
INSERT INTO clientes (nome, email, telefone) VALUES
('Alice Moura', 'alice.moura@gmail', '4888311468'),
('Betina Santos', 'betina.santos@gmail', '4878903456'),
('Felipe Neto', 'felipe.neto@gmail', '4891775898');

INSERT INTO produtos (nome, preco, quantidade_estoque) VALUES
('Produto A', 10.55, 100),
('Produto B', 8.50, 95),
('Produto C', 6.45, 90);

INSERT INTO vendas (id_cliente, id_produto, quantidade, data_venda) VALUES
(1, 1, 3, '2024-01-22'),
(3, 3, 2, '2024-01-30'),
(2, 2, 1, '2024-02-15');
SELECT v.id_venda, c.nome AS nome_cliente, p.nome AS nome_produto, v.quantidade, v.data_venda
FROM vendas v
JOIN clientes c ON v.id_cliente = c.id_cliente
JOIN produtos p ON v.id_produto = p.id_produto;
SELECT v.id_venda, p.nome AS nome_produto, v.quantidade, v.data_venda
FROM vendas v
JOIN produtos p ON v.id_produto = p.id_produto
WHERE v.id_cliente = 1;
SELECT p.nome AS nome_produto, SUM(v.quantidade) AS total_vendas
FROM vendas v
JOIN produtos p ON v.id_produto = p.id_produto
GROUP BY p.nome;
UPDATE produtos
SET quantidade_estoque = quantidade_estoque - 2
WHERE id_produto = 1;
UPDATE clientes
JOIN vendas ON clientes.id_cliente = vendas.id_cliente
SET clientes.telefone = '4898706534'
WHERE vendas.id_produto = 1;
DELETE FROM vendas WHERE id_venda = 1;
DELETE FROM clientes WHERE id_cliente = (SELECT id_cliente FROM vendas WHERE id_venda = 1);
Como Usar
Execute o script SQL para criar o banco de dados e as tabelas.
Insira os dados iniciais para clientes, produtos e vendas.
Utilize as consultas para gerar relatórios sobre as vendas e atualizar o banco de dados conforme necessário.
Dependências
MySQL ou outro banco de dados compatível.
Cliente SQL para executar as queries.
